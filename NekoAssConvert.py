"""
File: NekoAssConvert.py
Language: Python3
Author: 9volt <ninevult@gmail.com>
Purpose:
    Convert vector SVG files to the Advanced Substation Alpha (*.ass)
    format for use by advanced anime typesetters.
"""

# Imports
import sys
from xml.etree import ElementTree


# Global variables
NAME = "NekoAssConvert"
input_file = ""
output_file = ""
ofile = None


def read_input():
    """
    Reads through the input file using ElementTree to extract
    the commands, then send the arguments to be processed individually
    :param input_file: Input SVG filename
    :param output_file: Output ASS filename
    :return: None
    """
    tree = ElementTree.parse(input_file)
    root = tree.getroot()

    for child in root:
        if child.tag.startswith("{http://www.w3.org/2000/svg}"):
            command = child.tag[28:]
        else:
            command = child.tag

        print(command)
        if command == "rect":
            rect(child.attrib)


def rect(attribs):
    """
    Generates a rectangle
    :param attribs: Parameters for creating the rectangle
    :return:
    """
    # print(attribs)
    x = attribs.get("x")
    y = attribs.get("y")
    width = attribs.get("width")
    height = attribs.get("height")
    generator = \
        "m", x, y, \
        "l", x, y, \
        "l", strsum(x, width), y, \
        "l", strsum(x, width), strsum(y, height), \
        "l", x, strsum(y, height)

    generator = " ".join(generator)

    add_line(generator)
    # print(x, y)


def add_line(text):
    """
    Generates a usable line for the ASS format
    :param text: Text to be appended to the end of the line
    :return:
    """
    ofile.write("Dialogue: 0,0:00:00.0,0:00:02.00,Default,," + text + "\n")


def generate_file():
    """
    Generates ASS File template
    :return: None
    """
    global ofile
    first = ofile.read(1)
    if not first:
        # file = open(output_file, "w+")
        ofile.write("[Script Info]\n")
        ofile.write("; Script generated by NekoAssConvert 0.1\n")
        ofile.write("; 9voltfansubs.wordpress.com\n")
        ofile.write("Title: NekoAssConvert Generated ASS File\n")
        ofile.write("ScriptType: v4.00+\n")
        ofile.write("WrapStyle: 0\n")
        ofile.write("ScaledBorderAndShadow: yes\n")
        ofile.write("YCbCr Matrix: None\n")
        ofile.write("\n")
        ofile.write("[Aegisub Project Garbage]\n")
        ofile.write("Active Line: 1\n")
        ofile.write("\n")
        ofile.write("[V4+ Styles]\n")
        ofile.write("Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, " +
                   "Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, " +
                   "Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n")
        ofile.write("Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000," +
                   "0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1\n")
        ofile.write("\n")
        ofile.write("Events\n")
        ofile.write("Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n")
        # file.close()


def strsum(x, y):
    """
    Returns the sum of two strings representing integer values as a string
    :param x:
    :param y:
    :return:
    """
    return str(int(x) + int(y))


def main():
    """
    Run the program.
    Requires 2 additional command-line arguments:
        1) Path to input SVG file
        2) Path to output ASS file
    :return: None
    """
    if len(sys.argv) < 3 or len(sys.argv) > 4:
        print("Usage:", NAME, "input.svg output.ass")
        sys.exit()

    global input_file
    global output_file
    global ofile
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    ofile = open(output_file, "w+")

    generate_file()
    read_input()

    # clean up
    ofile.close()


# Run the main function
if __name__ == "__main__":
    main()
